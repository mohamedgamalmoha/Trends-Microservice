services:
    users-serv:
        container_name: users-con
        command: uvicorn main:app --host 0.0.0.0 --port 80 --reload --http httptools --loop uvloop
        restart: always
        build:
            context: ./users
            dockerfile: Dockerfile
        env_file:
             ./users/.env
        volumes:
            - ./users:/app
        depends_on:
            - users-db-serv
            - rabbitmq
        networks:
            - global-network
            - internal-network

    notification-serv:
        container_name: notification-con
        command: python main.py
        restart: unless-stopped
        build:
            context: ./notification
            dockerfile: Dockerfile
        env_file:
            - ./notification/.env
        volumes:
            - ./notification:/app
        networks:
            - internal-network
        depends_on:
            - rabbitmq
            - users-serv

    trends-serv:
        container_name: trends-con
        command: uvicorn main:app --host 0.0.0.0 --port 80 --reload --http httptools --loop uvloop
        restart: always
        build:
            context: ./trends
            dockerfile: Dockerfile
        env_file:
            - ./trends/.env
        volumes:
            - ./trends:/app
        depends_on:
            - trends-db-serv
            - rabbitmq
        networks:
            - global-network
            - internal-network

    trends-worker-serv:
        container_name: trends-worker-con
        command: celery -A worker.celery worker --loglevel=info
        restart: always
        build:
            context: ./trends
            dockerfile: Dockerfile
        env_file:
            - ./trends/.env
        volumes:
            - ./trends:/app
        networks:
            - internal-network
        depends_on:
            - trends-serv
            - redis

    nginx:
        image: nginx:1.27.4-alpine
        ports:
            - "80:80"
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
        networks:
            - global-network
        depends_on:
            - users-serv
            - trends-serv

    users-db-serv:
        image: postgres:17.4-alpine
        container_name: users-db-con
        restart: unless-stopped
        environment:
            POSTGRES_USER: users_db_user
            POSTGRES_PASSWORD: 123456
            POSTGRES_DB: users_db
            POSTGRES_PORT: 5432
        volumes:
            - users_data:/var/lib/postgresql/data
        networks:
            - internal-network

    trends-db-serv:
        image: postgres:17.4-alpine
        container_name: trends-db-con
        restart: unless-stopped
        environment:
            POSTGRES_USER: trends_db_user
            POSTGRES_PASSWORD: 123456
            POSTGRES_DB: trends_db
            PGPORT: 5433
        volumes:
            - trends_data:/var/lib/postgresql/data
        networks:
            - internal-network

    redis:
        container_name: redis-con
        image: redis:7.4.2-alpine
        restart: unless-stopped
        volumes:
            - redis_data:/var/lib/redis
        networks:
            - internal-network

    rabbitmq:
        container_name: rabbitmq-con
        image: rabbitmq:4.0.6-alpine
        restart: unless-stopped
        environment:
            - RABBITMQ_ENABLED_PLUGINS=[]
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq
        networks:
            - internal-network

volumes:
    users_data:
    trends_data:
    rabbitmq_data:
    redis_data:

networks:
    global-network:
        driver: bridge
    internal-network:
        driver: bridge
